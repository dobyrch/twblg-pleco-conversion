#!/usr/bin/env python3
import csv
import re

from collections import defaultdict


def main():
    id_to_chinese = defaultdict(list)
    with open('moedict-data-twblg/uni/對應華語.csv') as f:
        #skip header
        next(f)
        csvreader = csv.reader(f)
        for row in csvreader:
            assert len(row) == 3
            id_to_chinese[row[1]].append(row[2])

    id_to_entry = {}
    with open('moedict-data-twblg/uni/詞目總檔.csv') as f:
        #skip header
        next(f)
        csvreader = csv.reader(f)
        for row in csvreader:
            assert len(row) == 6
            if int(row[1]) in range(11, 23):
                assert row[0] not in id_to_entry
                id_to_entry[row[0]] = row[2], row[3], row[1]

    with open('moedict-data-twblg/uni/釋義.csv') as f:
        #skip header
        next(f)
        csvreader = csv.reader(f)
        for row in csvreader:
            assert len(row) == 5
            if row[1] in id_to_entry:
                entry = id_to_entry[row[1]]
                if entry[2] == '12':
                    for chinese in id_to_chinese[row[1]]:
                        print(chinese, '@' + entry[0], beautify(row[4]), sep='\t')
                else:
                    print(entry[0], '@' + entry[1], beautify(row[4]), sep='\t')


bold_on = '\uEABE'
bold_off = '\uEABF'


# Remove redundant "附錄" from every entry
def beautify(entry):
    if match := re.search('\(?附錄－([^－)]+)－?([^)]*)\)?', entry):
        assert match.end() == len(entry)
        entry = entry[:match.start()]
        entry_type = match.group(2) or match.group(1)

        if entry:
            entry += f"（{entry_type}）"
        else:
            entry = entry_type

    return entry


if __name__ == '__main__':
    main()
